# -*- coding: utf-8 -*-
"""6_modules.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/0BwNkduBnePt2MXR6Szg4YzJuQWM

# Modules

Modules refer to a file containing Python statements and definitions.

A file containing Python code, for e.g.: abc.py, is called a module and its module name would be "abc".

We use modules to break down large programs into small manageable and organized files. Furthermore, modules provide reusability of code.

We can define our most used functions in a module and import it, instead of copying their definitions into different programs.

# How to import a module?

We use the import keyword to do this.
"""

import example #imported example module

"""Using the module name we can access the function using dot (.) operation."""

example.add(10, 20)

"""Python has a lot of standard modules available.

https://docs.python.org/3/py-modindex.html

# Examples:
"""

import math
print(math.pi)

import datetime
datetime.datetime.now()

"""# import with renaming"""

import math as m
print(m.pi)

"""# from...import statement

We can import specific names form a module without importing the module as a whole.
"""

from datetime import datetime 
datetime.now()

"""# import all names"""

from math import *
print("Value of PI is " + str(pi))

"""# dir() built in function

We can use the dir() function to find out names that are defined inside a module.
"""

dir(example)

print(example.add.__doc__)